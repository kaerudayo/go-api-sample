// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/repository/command/user.go

// Package mock_command is a generated GoMock package.
package mock_command

import (
	reflect "reflect"

	model "github.com/api-sample/app/domain/model"
	gomock "github.com/golang/mock/gomock"
)

// MockUserCommand is a mock of UserCommand interface.
type MockUserCommand struct {
	ctrl     *gomock.Controller
	recorder *MockUserCommandMockRecorder
}

// MockUserCommandMockRecorder is the mock recorder for MockUserCommand.
type MockUserCommandMockRecorder struct {
	mock *MockUserCommand
}

// NewMockUserCommand creates a new mock instance.
func NewMockUserCommand(ctrl *gomock.Controller) *MockUserCommand {
	mock := &MockUserCommand{ctrl: ctrl}
	mock.recorder = &MockUserCommandMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserCommand) EXPECT() *MockUserCommandMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m_2 *MockUserCommand) Create(m *model.User) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "Create", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUserCommandMockRecorder) Create(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserCommand)(nil).Create), m)
}
